{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/login.service\";\nimport * as i3 from \"../service/note.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"ngx-bootstrap/datepicker\";\n\nfunction NoteComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const x_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", x_r5.NoteTypeID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", x_r5.NoteTypeName, \" \");\n  }\n}\n\nfunction NoteComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \"Select Department.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NoteComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Note is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NoteComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Max length is 100\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NoteComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, NoteComponent_div_19_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵtemplate(2, NoteComponent_div_19_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"NoteText\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"NoteText\"].errors[\"maxlength\"]);\n  }\n}\n\nfunction NoteComponent_div_20_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Due Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NoteComponent_div_20_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, NoteComponent_div_20_div_4_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f[\"DateTime\"].errors[\"required\"]);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction NoteComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2, \"Due Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 19);\n    i0.ɵɵtemplate(4, NoteComponent_div_20_div_4_Template, 2, 1, \"div\", 9);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r3.submitted && ctx_r3.f[\"DateTime\"].errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.submitted && ctx_r3.f[\"DateTime\"].errors);\n  }\n}\n\nfunction NoteComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵelement(2, \"input\", 20);\n    i0.ɵɵtext(3, \" Complete.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let NoteComponent = /*#__PURE__*/(() => {\n  class NoteComponent {\n    constructor(router, loginservice, noteservice, toastr) {\n      this.router = router;\n      this.loginservice = loginservice;\n      this.noteservice = noteservice;\n      this.toastr = toastr;\n      this.edited = false;\n      this.complete = false;\n      this.submitted = false;\n      this.noteform = new FormGroup({\n        NoteTypeID: new FormControl(),\n        NoteText: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n        DateTime: new FormControl(),\n        InoperationID: new FormControl()\n      });\n    }\n\n    get f() {\n      return this.noteform.controls;\n    }\n\n    onView() {\n      this.router.navigate(['/viewnote']);\n    }\n\n    getNoteType() {\n      this.noteservice.getNoteType().subscribe(data => {\n        this.notlist = data;\n      });\n    }\n\n    ngOnInit() {\n      if (localStorage.getItem('token') != null) {\n        this.loginservice.submitted = true;\n        this.getNoteType();\n      } else {\n        this.loginservice.submitted = false;\n      }\n    }\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.noteform.value.NoteTypeID == null || this.noteform.value.NoteText == '') {\n        this.toastr.error('Please select a note type and enter note text');\n      } else if ((this.noteform.value.NoteTypeID == 2 || this.noteform.value.NoteTypeID == 3) && this.noteform.value.DateTime == null) {\n        this.toastr.error('Please select a Date Time');\n      } else {\n        this.noteservice.insertNote(this.noteform.value);\n      }\n    }\n\n    onChange(e) {\n      if (e.target.value == 1) {\n        this.edited = false;\n        this.complete = false;\n      } else if (e.target.value == 2) {\n        this.complete = false;\n        this.edited = true;\n      } else if (e.target.value == 3) {\n        this.edited = true;\n        this.complete = true;\n      } else if (e.target.value == 4) {\n        this.edited = false;\n        this.complete = false;\n      }\n    }\n\n  }\n\n  NoteComponent.ɵfac = function NoteComponent_Factory(t) {\n    return new (t || NoteComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.NoteService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  NoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NoteComponent,\n    selectors: [[\"app-note\"]],\n    decls: 30,\n    vars: 12,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm-1\"], [1, \"col-sm-10\", \"card\"], [1, \"header\", 2, \"font-family\", \"'Times New Roman', Times, serif\"], [1, \"col-sm-12\"], [\"formControlName\", \"NoteTypeID\", 1, \"form-control\", 3, \"ngClass\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"col-sm-6\"], [\"type\", \"textarea\", \"formControlName\", \"NoteText\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"col-sm-6\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", \"value\", \"View Note\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"DateTime\", \"placeholder\", \"Datepicker\", \"bsDatepicker\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"checkbox\", \"name\", \"InoperationID\", \"formControlName\", \"InoperationID\"]],\n    template: function NoteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function NoteComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"p\", 5);\n        i0.ɵɵtext(6, \"Node Entry Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10, \"Note Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 7);\n        i0.ɵɵlistener(\"change\", function NoteComponent_Template_select_change_11_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵtemplate(12, NoteComponent_option_12_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, NoteComponent_div_13_Template, 3, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 2);\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"label\");\n        i0.ɵɵtext(17, \"Enter Note Text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"textarea\", 11);\n        i0.ɵɵtemplate(19, NoteComponent_div_19_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, NoteComponent_div_20_Template, 6, 4, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, NoteComponent_div_21_Template, 4, 0, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"div\", 2);\n        i0.ɵɵelement(24, \"div\", 10);\n        i0.ɵɵelementStart(25, \"div\", 10);\n        i0.ɵɵelement(26, \"input\", 14);\n        i0.ɵɵtext(27, \"\\u00A0 \");\n        i0.ɵɵelementStart(28, \"input\", 15);\n        i0.ɵɵlistener(\"click\", function NoteComponent_Template_input_click_28_listener() {\n          return ctx.onView();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.noteform);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f[\"NoteTypeID\"].value == 0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.notlist);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"NoteTypeID\"].value == 0);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f[\"NoteText\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"NoteText\"].errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.edited);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.complete);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgClass, i6.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i6.NgIf, i5.DefaultValueAccessor, i7.BsDatepickerInputDirective, i7.BsDatepickerDirective, i5.CheckboxControlValueAccessor],\n    styles: [\".btn[_ngcontent-%COMP%]{background-color:#b8b8c8;color:#000;font-family:Gill Sans,Gill Sans MT,Calibri,Trebuchet MS,sans-serif;border:none}\"]\n  });\n  return NoteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}